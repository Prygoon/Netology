---
- hosts: all
  vars:
    user: prygoon
    # created with:
    # python -c 'import crypt; print(crypt.crypt("<password>", "$1$tjerugy9$"))'
    password: $1$tjerugy9$5O391mjzV0GXpgVpIUECF1
  become: true
  tasks:
    - name: Update all packages in Debian-based machines
      become: true
      ansible.builtin.apt:
        upgrade: true
        update_cache: true
        cache_valid_time: 86400
      when:
        - ansible_os_family == "Debian"
    - name: Install software (Debian-based OSes)
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      with_items:
        - htop
        - vim
        - firewalld
      when:
        - ansible_os_family == "Debian"
    - name: Update all packages in RPM-based machines
      become: true
      ansible.builtin.dnf:
        name: "*"
        state: latest
        update_cache: true
        update_only: false
      when:
        - ansible_os_family == "RedHat"
    - name: Enable EPEL Repository
      ansible.builtin.dnf:
        name: epel-release
        state: present
      when: ansible_facts['os_family'] == 'RedHat'
    - name: Install software (RPM-based OSes)
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
        update_cache: true
      with_items:
        - htop
        - vim
        - net-tools
      when:
        - ansible_os_family == "RedHat"
    - name: Make sure we have a 'wheel' group
      ansible.builtin.group:
        name: wheel
        state: present
    - name: Create new user
      ansible.builtin.user:
        name: "{{ user }}"
        password: "{{ password }}"
        state: present
        create_home: true
        groups: wheel
        append: true
        shell: /bin/bash
    - name: Add 'wheel' group to sudoers
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^%wheel"
        line: "%wheel ALL=(ALL) ALL"
        validate: "visudo -cf %s"
    - name: Set authorized key for user took from file
      ansible.posix.authorized_key:
        user: "{{ user }}"
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
